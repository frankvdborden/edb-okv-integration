##############################################################################
#                      Logging Configuration File
# Use this configration file while running the demo programs or any endpoint
# programs which uses Oracle Key Vault JAVA SDK.
#
# This properties file configures the operation of the JDK logging facility.
#
# The system will look for this configuration file first by using the system
# property provided at startup:
# java -Djava.util.logging.config.file=<file_path>/logging.properties
# 
# If this property is not specified, then the configuration file is retrieved 
# from its default location at: $JAVA_HOME/jre/lib/logging.properties
##############################################################################


##############################################################################
#                      Global properties
##############################################################################

# "handlers" specifies a comma separated list of log Handlers that are to be 
# loaded upon startup.
#
# By default we only configure a FileHandler.
handlers= java.util.logging.FileHandler
# To also add the ConsoleHandler, use the following line instead.
#handlers= java.util.logging.FileHandler, java.util.logging.ConsoleHandler

# Default global logging level.
# Loggers and Handlers may override this level.
# Allowed Logging Levels: OFF, SEVERE, WARNING, INFO, FINE, FINER, and ALL.
# To change to desired logging level, please use the above allowed values. 
.level= OFF


##############################################################################
#                     Handler specific properties
##############################################################################
# Allowed Logging Levels: OFF, SEVERE, WARNING, INFO, FINE, FINER and ALL.
# To change to desired logging level, please use the above allowed values. 
java.util.logging.FileHandler.level= OFF
# 'count' property specifies how many output files to cycle through.
# Please change it to a different value as per your requirement.
java.util.logging.FileHandler.count= 1
# 'append' property specifies whether the FileHandler should append onto 
# any existing files.
java.util.logging.FileHandler.append= true
# Specify the pattern for the output trace filename.
# "%t" is the system temporary directory.
# "%u" is a unique number to resolve conflicts.
# "%g" is the generation number to distinguish rotated logs.
java.util.logging.FileHandler.pattern= %t/okv_jsdk_%u%g.trc 
# 'formatter' property specifies the name of a Formatter class to use.
java.util.logging.FileHandler.formatter= java.util.logging.SimpleFormatter

# Setting the ConsoleHandler level to OFF
# and formatter to simple text format.
java.util.logging.ConsoleHandler.level= OFF
java.util.logging.ConsoleHandler.formatter= java.util.logging.SimpleFormatter

# Format output to the trace file.
java.util.logging.SimpleFormatter.format= %1$tY-%1$tm-%1$td %1$tH:%1$tM:%1$tS.%1$tL : %4$s : %2$s : %5$s %6$s%n

